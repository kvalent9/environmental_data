length.out = n))
slope_newdata$gcki_predicted =
predict(
fit_gcki_slope,
newdata = slope_newdata,
type = "response"
)
ba_newdata$gcki_predicted =
predict(
fit_hewa_ba_tot,
newdata = ba_newdata,
type = "response"
)
ba_newdata$gcki_predicted =
predict(
fit_gcki_ba_tot,
newdata = ba_newdata,
type = "response"
)
par(mfrow = c(2, 1))
plot(
HEWA_pres ~ slope, data = dat_all,
xlab = "Percent Slope",
ylab = "HEWA presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
plot(
GCKI_pres ~ slope, data = dat_all,
xlab = "Percent Slope",
ylab = "GCKI presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
lines(hewa_predicted ~ slope, data = slope_newdata)
plot(
GCKI_pres ~ slope, data = dat_all,
xlab = "Percent Slope",
ylab = "GCKI presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
lines(GCKI_predicted ~ slope, data = slope_newdata)
lines(gcki_predicted ~ slope, data = slope_newdata)
lines(gcki_predicted ~ ba.tot, data = ba_newdata)
plot(
GCKI_pres ~ slope, data = dat_all,
xlab = "Percent Slope",
ylab = "GCKI presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
lines(gcki_predicted ~ slope, data = slope_newdata)
plot(
GCKI_pres ~ ba.tot, data = dat_all,
xlab = "Basal Area",
ylab = "GCKI presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
lines(gcki_predicted ~ ba.tot, data = ba_newdata)
par(mfrow = c(2, 1))
plot(
GCKI_pres ~ slope, data = dat_all,
xlab = "Percent Slope",
ylab = "GCKI presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
lines(gcki_predicted ~ slope, data = slope_newdata)
plot(
GCKI_pres ~ ba.tot, data = dat_all,
xlab = "Basal Area",
ylab = "GCKI presence/absence",
pch = 16, cex = 1.5, col = gray(0, 0.2)
)
lines(gcki_predicted ~ ba.tot, data = ba_newdata)
ba.tot = seq(
from = min(dat_all$ba.tot, na.rm = T),
to = max(dat_all$ba.tot, na.rm = T),
length.out = n)
slope = seq(
from = min(dat_all$slope, na.rm = T),
to = max(dat_all$slope, na.rm = T),
length.out = n)
ba.tot = seq(
from = min(dat_all$ba.tot, na.rm = T),
to = max(dat_all$ba.tot, na.rm = T),
length.out = n)
slope = seq(
from = min(dat_all$slope, na.rm = T),
to = max(dat_all$slope, na.rm = T),
length.out = n)
new_dat_all = expand.grid(
ba.tot = ba.tot,
slope = slope)
head(new_dat_all)
tail(new_dat_all)
new_dat_all$pred_add = predict(
fit_hewa_both_additive,
newdata = new_dat_all,
type = "response")
new_dat_all$pred_add = predict(
fit_gcki_both_additive,
newdata = new_dat_all,
type = "response")
new_dat_all$pred_int = predict(
fit_gcki_both_interactive,
newdata = new_dat_all,
type = "response")
z_gcki_add = matrix(
new_dat_all$pred_add,
nrow = length(ba.tot),
byrow = FALSE)
z_gcki_int = matrix(
new_dat_all$pred_int,
nrow = length(ba.tot),
byrow = FALSE)
contour(
x = ba.tot, y = slope,
z = z_gcki_add,
xlab = "Total Basal Area",
ylab = "Percent Slope",
main = "Additive")
contour(
x = ba.tot,
y = slope,
z = z_gcki_int,
xlab = "Total Basal Area",
ylab = "Percent Slope",
main = "Interactive")
library(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"))
head(penguins)
lm(body_mass_g ~ bill_depth_mm,
data = penguins)
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
require(palmerpenguins)
boxplot(body_mass_g ~ species, data = penguins)
require(palmerpenguins)
boxplot(body_mass_g ~ species, data = penguins)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
shapiro.test(dat_chinstrap$body_mass_g)
aggregate(body_mass_g ~ species, data = penguins, FUN = mean)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
boxplot(body_mass_g ~ species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
summary(fit_interactive)
lm(bill_length_mm ~ body_mass_g, data = penguins)
#Graphical
par(mfrow = c(1, 1))
boxplot(penguins$body_mass_g ~ penguins$sex:penguins$species,
main = "Conditional boxplot with 2 predictors",
las = "2",
xlab = " ",
ylab = "Body mass",
names = c("Female\nAdelie", "Male\nAdelie", "Female\nChinstrap", "Male\nChinstrap", "Female\nGentoo", "Male\nGentoo"))
#R Reference Guide {.tabset}
# The library() and require() functions can retrieve data packages built into R and the here() function used to retrieve data from your own files
library(palmerpenguins)
library(palmerpenguins)
knitr::opts_chunk$set(echo = TRUE)
#R Reference Guide
#R Reference Guide {.tabset}
##Loading Data and Packages
library(palmerpenguins)
## The library() function can be used to retrieve interal data packages built into R
```{r}
library(palmerpenguins)
##Loading Data and Packages
## The library() function can be used to retrieve internal data packages built into R
```{r}
## The library() function can be used to retrieve internal data packages built into R
## The library() and require() functions can be used to retrieve data packages
library(palmerpenguins)
require(here)
read.csv(here("docs", "ginkgo"))
read.csv(here("data", "ginkgo"))
read.csv(here("data", "ginkgo.csv"))
read.csv(here("docs", "ginkgo.csv"))
ginkgo <- data.frame(read.csv(here("docs", "ginkgo.csv")))
#R Reference Guide {.tabset .tabset-pills}
ginkgo <- data.frame(read.csv(here("docs", "ginkgo.csv")))
num_vec  = c(1, 4, 8, 9, 13)
char_vec = c("a", "fish", "data is cool")
num_vec
print(char_vec)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
require(here)
read.csv(here("docs", "ginkgo.csv"))
ginkgo <- data.frame(read.csv(here("docs", "ginkgo.csv")))
num_vec  = c(1, 4, 8, 9, 13)
char_vec = c("a", "fish", "data is cool")
num_vec
print(char_vec)
length(char_vec)
matrix(ginkgo)
ginkgo <- data.frame(read.csv(here("docs", "ginkgo.csv")))
data.frame(ginkgo)
nrow(ginkgo)
ncol(ginkgo)
dim(gingko)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
require(here)
ginkgo <- data.frame(read.csv(here("docs", "ginkgo.csv")))
num_vec  = c(1, 4, 8, 9, 13)
char_vec = c("a", "fish", "data is cool")
num_vec
print(char_vec)
length(char_vec)
matrix(ginkgo)
data.frame(ginkgo)
nrow(ginkgo)
ncol(ginkgo)
ginkgo <- data.frame(read.csv(here("docs", "ginkgo.csv")))
nrow(ginkgo)
ncol(ginkgo)
dim(ginkgo)
ginkgo$site_id
ginkgo_site <- ginkgo$site_id
ginkgo[1,]
ginkgo[2,3]
ginkgo[,3]
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, subset = adelie )
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, subset = adelie, select = species)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, subset = adelie, select = species)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, subset = species, select = adelie)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, subset = "species", select = "adelie")
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, subset == adelie)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins$species, subset == adelie)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, species == adelie)
library(palmerpenguins)
require(here)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, species == adelie)
ginkgo_site <- ginkgo$site_id
adelie <- subset(penguins, species == "adelie")
summary(penguins)
mean(penguins$bill_length_mm)
mean(penguins$bill_length_mm, na.rm = TRUE)
mean(penguins$flipper_length_mm)
mean(penguins$flipper_length_mm, na.rm = TRUE)
mean(penguins$flipper_length_mm, na.rm = TRUE)
sd(penguins$flipper_length_mm, na.rm = TRUE)
mean(penguins$flipper_length_mm, na.rm = FALSE)
sd(penguins$flipper_length_mm, na.rm = TRUE)
mean(penguins$flipper_length_mm, na.rm = TRUE)
sd(penguins$flipper_length_mm, na.rm = TRUE)
?plot
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.2, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.1, cex = 1.2, main = "Ginkgo Leaf Scatterplot", xlim = 100, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.2, main = "Ginkgo Leaf Scatterplot", xlim = 100, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", xlim = 100, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", xlim = 120, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", xlim = 200, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", xlim = 50, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", xlim = 50, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", xlim = 500, ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot", ylim = 100)
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.2, cex = 1.1, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.1, cex = 1.1, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.01, cex = 1.1, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.5, cex = 1.1, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.5, cex = 0.5, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.002, cex = 0.5, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.002, cex = 0.2, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.002, cex = 0.4, main = "Ginkgo Leaf Scatterplot")
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.0, cex = 0.4, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100))
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.0, cex = 0.4, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100), ylim = c(0,100))
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 0.0, cex = 0.4, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100), ylim = c(0,120))
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 1, cex = 0.4, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100), ylim = c(0,120))
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 2, cex = 0.4, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100), ylim = c(0,120))
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 2, cex = 0.6, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100), ylim = c(0,120))
plot(x = ginkgo$max_width, y= ginkgo$max_depth, xlab = "Max width (mm)", ylab = "Max depth (mm)", col = "purple", pch = 2, cex = 0.3, main = "Ginkgo Leaf Scatterplot", xlim = c(0,100), ylim = c(0,120))
hist(x = penguins$flipper_length_mm, breaks = 6)
boxplot(x = ginkgo$petiole_length)
boxplot(x = ginkgo$petiole_length, ylab = "Petiole length")
boxplot(ginkgo$notch_depth ~ ginkgo$seeds_present,
main = "Notch depth Conditioned On Seeds Present", xlab = "Seed Presence",
ylab = "Notch Depth",
names = c("Female\nAdelie", "Male\nAdelie", "Female\nChinstrap", "Male\nChinstrap"))
boxplot(ginkgo$notch_depth ~ ginkgo$seeds_present,
main = "Notch depth Conditioned On Seeds Present", xlab = "Seed Presence",
ylab = "Notch Depth",
names = c("Presence", "Absence"))
boxplot(ginkgo$notch_depth ~ ginkgo$seeds_present,
main = "Notch Depth Conditioned On Seeds Present", xlab = "Seed Presence",
ylab = "Notch Depth",
names = c("Presence", "Absence"))
boxplot(x = ginkgo$petiole_length, ylab = "Petiole length", main = "Petiole Length Boxplot")
par(mfrow = c(2,2))
hist(x = ginkgo$site_id, main = "Ginkgo Tree Sites Hist", xlab = "Site ID", y = "Frequency")
par(mfrow = c(2,2))
hist(x = ginkgo$seeds_present, main = "Ginkgo Seed Presence Hist", xlab = "Presence/Absence", ylab = "Frequency")
par(mfrow = c(2,2))
hist(x = ginkgo$max_width, main = "Ginkgo Max Depth Hist", xlab = "Max depth (mm)", ylab = "Frequency")
par(mfrow = c(2,2))
hist(x = ginkgo$max_width, main = "Ginkgo Leaf Max Depth Hist", xlab = "Max depth (mm)", ylab = "Frequency")
hist(x = ginkgo$max_depth, main = "Ginkgo Leaf Max Width Hist", xlab = "Max width (mm)", ylab = "Frequency")
hist(x = ginkgo$notch_depth, main = "Ginkgo Leaf Notch Depth", xlab = "Notch depth", ylab = "Frequency")
hist(x = ginkgo$petiole_length, main = "Ginkgo Leaf Petiole Length", xlab = "Petiole length", ylab = "Frequency")
dnorm(0)
pnorm(1)
qnorm(1)
qnorm(0)
dnorm(1000)
dnorm(100)
dnorm(0)
dnorm(0)
qnorm(1000)
qnorm(0.85)
dbinom(1000)
dbinom(size = 1000)
dbinom(x = 1000, size = 10)
dbinom(x = 1000, size = 10, prob = 0.4)
dbinom(x = 1, size = 1000, prob = 0.4)
dbinom(x = 10, size = 1000, prob = 0.4)
dbinom(x = 10, size = 100, prob = 0.4)
dbinom(x = 10, size = 100, prob = 0.8)
dbinom(x = 10, size = 100, prob = 0.2)
pbinom( q = 10, size = 100, prob = 0.2)
qbinom(p = c(0,10), size = 100, prob = 0.2)
qbinom(p = 10, size = 100, prob = 0.2)
qbinom(p = .10, size = 100, prob = 0.2)
qnorm(p = 0.85)
##Distribution Functions
Returns the value of the probability density function (pdf) of a normal distribution
dnorm(0)
pnorm(1)
qnorm(p = 0.85)
dbinom(x = 10, size = 100, prob = 0.2)
pbinom( q = 10, size = 100, prob = 0.2)
qbinom(p = .10, size = 100, prob = 0.2)
knitr::opts_chunk$set(echo = TRUE)
require(here)
require(here)
delomys <- read.csv(here("data", "delomys.csv"))
require(here)
delomys <- read.csv(here("data", "delomys.csv"))
summary(delomys$body_mass)
summary(delomys$body_length)
require(here)
delomys <- read.csv(here("data", "delomys.csv"))
#Body mass summary
summary(delomys$body_mass)
#Body length summary
summary(delomys$body_length)
#Body mass normality test
shapiro.test(delomys$body_mass)
#Body length normality test
shapiro.test(delomys$body_length)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins)
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins, main = "Scatterplot of penguin body mass and bill length")
require(palmerpenguins)
plot(body_length_mm ~ body_mass_g, data = penguins, main = "Scatterplot of penguin body mass and body length")
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins, main = "Scatterplot of penguin body mass and body length")
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins, main = "Scatterplot of penguin body mass (g) and bill length (mm)")
summary(penguins)
hist(penguins$body_mass_g, main = "Histogram of penguin body mass")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass (g)")
hist(penguins$bill_length_mm, main = "Histogram of penguin bill length (mm)")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass (g)")
hist(penguins$bill_length_mm, main = "Histogram of penguin bill length (mm)")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass (g)")
hist(penguins$bill_length_mm, main = "Histogram of penguin bill length (mm)")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass (g)")
hist(penguins$bill_length_mm, main = "Histogram of penguin bill length (mm)")
hist(penguins$body_mass_g, main = "Histogram of penguin body mass (g)")
hist(penguins$bill_length_mm, main = "Histogram of penguin bill length (mm)")
require(palmerpenguins)
plot(bill_length_mm ~ body_mass_g, data = penguins, main = "Scatterplot of penguin body mass (g) and bill length (mm)")
boxplot(penguins$body_mass_g ~ penguins$species,
main = "Penguin body mass conditioned on species", xlab = "Species",
ylab = "Body mass (g)",
names = c("Adelie", "Gentoo", "Chinstrap"))
summary(penguins)
boxplot(penguins$body_mass_g ~ penguins$species,
main = "Penguin body mass conditioned on species", xlab = "Species",
ylab = "Body mass (g)",
names = c("Adelie", "Chinstrap", "Gentoo"))
boxplot(penguins$body_mass_g ~ penguins$species,
main = "Penguin body mass conditioned on species", xlab = "Species",
ylab = "Body mass (g)",
names = c("Adelie", "Chinstrap", "Gentoo"))
boxplot(penguins$body_mass_g ~ penguins$species,
main = "Penguin body mass conditioned on species", xlab = "Species",
ylab = "Body mass (g)",
names = c("Adelie", "Chinstrap", "Gentoo"))
boxplot(penguins$body_mass_g ~ penguins$sex,
main = "Penguin body mass conditioned on sex", xlab = "Sex",
ylab = "Body mass (g)",
names = c("Female", "Male"))
boxplot(penguins$body_mass_g ~ penguins$species,
main = "Penguin body mass conditioned on species", xlab = "Species",
ylab = "Body mass (g)",
names = c("Adelie", "Chinstrap", "Gentoo"))
boxplot(penguins$body_mass_g ~ penguins$sex,
main = "Penguin body mass conditioned on sex", xlab = "Sex",
ylab = "Body mass (g)",
names = c("Female", "Male"))
boxplot(penguins$body_mass_g ~ penguins$sex:penguins$species,
names = c("Female\nAdelie", "Male\nAdelie", "Female\nChinstrap", "Male\nChinstrap", "Female\nGentoo", "Male\nGentoo" ),
main = "Penguin body mass conditioned on species and sex",
xlab = "Sex and Species",
ylab = "Body mass (g)")
plot(body_length ~ body_mass, data = delomys, main = "Scatterplot of Delomy body mass and body length")
hist(delomys$body_mass, main = "Histogram of Delomys body mass")
hist(delomys$body_length, main = "Histogram of Delomys body length")
hist(delomys$body_mass, main = "Histogram of Delomys body mass")
hist(delomys$body_length, main = "Histogram of Delomys body length")
summary(delomys)
hist(delomys$body_mass, main = "Histogram of Delomys body mass")
hist(delomys$body_length, main = "Histogram of Delomys body length")
head(delomys)
boxplot(delomys$body_mass ~ delomys$binomial,
main = "Delomys body mass conditioned on species", xlab = "Species",
ylab = "Body mass",
names = c("Delomys dorsalis"))
boxplot(delomys$body_mass ~ delomys$binomial,
main = "Delomys body mass conditioned on species", xlab = "Species",
ylab = "Body mass",
names = c("Delomys dorsalis"))
boxplot(delomys$body_mass ~ delomys$binomial,
main = "Delomys body mass conditioned on species", xlab = "Species",
ylab = "Body mass",
names = "Delomys dorsalis")
boxplot(delomys$body_mass ~ delomys$binomial,
main = "Delomys body mass conditioned on species", xlab = "Species",
ylab = "Body mass")
boxplot(delomys$body_mass ~ delomys$sex,
main = "Delomys body mass conditioned on sex", xlab = "Sex",
ylab = "Body mass",
names = c("Female", "Male"))
boxplot(delomys$body_mass ~ delomys$sex:delomys$binomial,
names = c("Female\nDelomys", "Male\nDelomys"),
main = "Delomys body mass conditioned on species and sex",
xlab = "Sex and Species",
ylab = "Body mass")
hist(delomys$body_mass, main = "Histogram of Delomys body mass")
hist(delomys$body_length, main = "Histogram of Delomys body length")
head(delomys$binomial)
tail(delomys$binomial)
boxplot(delomys$body_mass ~ delomys$binomial,
main = "Delomys body mass conditioned on species", xlab = "Species",
ylab = "Body mass"
names = c("Delomys dorsalis", "Delomys sublineatus"))
boxplot(delomys$body_mass ~ delomys$binomial,
main = "Delomys body mass conditioned on species", xlab = "Species",
ylab = "Body mass",
names = c("Delomys dorsalis", "Delomys sublineatus"))
boxplot(delomys$body_mass ~ delomys$sex,
main = "Delomys body mass conditioned on sex", xlab = "Sex",
ylab = "Body mass",
names = c("Female", "Male"))
boxplot(delomys$body_mass ~ delomys$sex:delomys$binomial,
names = c("Female\ndorsalis", "Male\ndorsalis", "Female\nsublineatus", "Male\nsublineatus"),
main = "Delomys body mass conditioned on species and sex",
xlab = "Sex and Species",
ylab = "Body mass")
